{"version":3,"sources":["components/animales/AnimalList.js","components/animales/AnimalForm.js","components/animales/AnimalManager.js","components/login/Login.js","App.js","reportWebVitals.js","index.js"],"names":["AnimalList","props","history","useHistory","Col","to","icon","faPlus","datos","map","animal","index","Button","color","style","margin","onClick","e","id","_id","push","faEye","faPen","Swal","fire","title","text","showCancelButton","then","result","value","axios","delete","resp","animales","filter","a","setDatos","catch","error","faTrash","tipo","nombre","tamanio","fecha","Date","toUTCString","initialState","AnimalForm","useParams","useState","inputs","setInputs","tipos","setTipos","actualizarFormulario","target","name","parseDate","console","log","fechaSplit","split","UTC","volver","useEffect","get","data","Container","Row","ver","modificar","Form","onSubmit","preventDefault","put","findIndex","splice","editar","post","concat","message","crear","xs","FormGroup","Label","for","Input","type","onChange","disabled","t","i","codigo","AnimalManager","useRouteMatch","path","url","exact","Login","email","password","mensaje","required","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2ad96b83.chunk.js","sourcesContent":["import { Link, Redirect, useHistory } from 'react-router-dom';\nimport {Button, Col} from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEye, faPen, faTrash, faPlus } from '@fortawesome/free-solid-svg-icons'\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\n\nfunction AnimalList(props) {\n\n    const history = useHistory();\n\n    const ver =(e, id) => {\n        history.push('/animales/ver/'+id);\n    }\n\n    const modificar =(e, id) => {\n        history.push('/animales/modificar/'+id);\n    }\n\n    const eliminar = (e, id) => {\n        Swal.fire({\n            title: 'Eliminar animal',\n            text: '¿Está seguro que desea eliminar el animal?',\n            icon: 'warning',\n            showCancelButton: true\n        }).then(result => {\n            if(result.value) {\n                axios.delete('/api/animales/'+id)\n                .then(resp => {\n                    const animales = props.datos.filter(a => a._id !== id);\n                    props.setDatos(animales); \n                }).catch(error => Swal.fire('Error al obtener los datos', 'Ha ocurrido un problema al intentar eliminar el animal', 'error'))\n            }\n        })\n    }\n\n    return (\n        <Col>\n            <Link to=\"/animales/crear\">\n                <FontAwesomeIcon icon={faPlus}/>\n            </Link>\n            <table>\n                <thead>\n                    <tr>\n                        <th>Acciones</th>\n                        <th>Tipo</th>\n                        <th>Nombre</th>\n                        <th>Color</th>\n                        <th>Tamaño</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {props.datos.map((animal, index) => <tr key={index}>\n                        <td>\n                            <Button color=\"primary\" style={{margin:'2px'}} onClick={e => ver(e, animal._id)}><FontAwesomeIcon icon={faEye}/></Button>\n                            <Button color=\"secondary\" style={{margin:'2px'}} onClick={e => modificar(e, animal._id)}><FontAwesomeIcon icon={faPen}/></Button>\n                            <Button color=\"danger\" style={{margin:'2px'}} onClick={e => eliminar(e, animal._id)}><FontAwesomeIcon icon={faTrash}/></Button>\n                        </td>\n                        <td>{animal.tipo}</td>\n                        <td>{animal.nombre}</td>\n                        <td>{animal.color}</td>\n                        <td>{animal.tamanio}</td>\n                        <td>{animal.fecha?new Date(animal.fecha).toUTCString():''}</td>\n                    </tr>)}\n                </tbody>\n            </table>\n        </Col>\n    )\n}\n\nexport default AnimalList;","import { Redirect, useHistory, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport {Row, Col, Form, FormGroup, Container, Label, Input, Button} from 'reactstrap';\nimport Swal from 'sweetalert2';\n\n\nconst initialState =  {\n    nombre: '',\n    tipo: '',\n    color: '',\n    tamanio: '',\n    fecha: new Date()\n}\n\nconst AnimalForm = props => {\n\n    const history = useHistory();\n    let { id } = useParams();\n    const [inputs, setInputs] = useState(initialState);\n    const [tipos, setTipos] = useState([]);\n\n    \n\n\n    const actualizarFormulario = (e) => {\n        const {name, value} = e.target;\n        setInputs({\n            ...inputs, \n            [name]: value\n        });\n    }\n\n    const parseDate = (fecha) => {\n        console.log(fecha);\n        if(fecha) {\n            const fechaSplit = fecha.split(\"-\");\n            return new Date(Date.UTC(fechaSplit[0], fechaSplit[1]-1, fechaSplit[2]));\n        }\n    }\n\n    const crear = (e) => {\n        inputs.fecha = parseDate(inputs.fecha);\n        axios.post('/api/animales', inputs)\n            .then(resp => {\n                if(resp.data && resp.data.data){\n                    volver(e)\n                    props.setDatos(props.datos.concat([resp.data.data]));\n                } else {\n                    Swal.fire('Error de validación', resp.data.error.message, 'error')\n                }\n            })\n            .catch(error => Swal.fire('Error al obtener los datos', 'Ha ocurrido un problema al intentar crear el animal', 'error'))\n    }\n\n    const editar = (e) => {\n        inputs.fecha = parseDate(inputs.fecha);\n        axios.put('/api/animales/'+id, inputs)\n        .then(resp => {\n            const index = props.datos.findIndex(a => a._id === id);\n            console.log('Index', index);\n            props.datos.splice(index, 1, inputs);\n            props.setDatos(props.datos);   \n            volver(e)\n        })\n        .catch(error => Swal.fire('Error al obtener los datos', 'Ha ocurrido un problema al intentar editar el animal', 'error'))\n    }\n\n    const guardar = (e) => {\n        e.preventDefault();\n        if(id) {\n            editar();\n        } else {\n            crear();\n        }\n    }\n\n    const volver = (e) => {\n        history.push('/animales');\n        // return <Redirect to=\"/\" />\n    }\n\n    useEffect(() => {\n        axios.get('/api/tipos_animales')\n            .then(resp => setTipos(resp.data.data))\n            .catch(error => Swal.fire('Error al obtener los datos', 'Ha ocurrido un problema al intentar obtener el listado tipo de animales', 'error'))\n        if(id) {\n            axios.get('/api/animales/'+id)\n            .then(resp => setInputs(resp.data.data))\n            .catch(error => Swal.fire('Error al obtener los datos', 'Ha ocurrido un problema al intentar obtener el animal con id ' + props.id, 'error'))\n            \n        }\n    }, []);\n\n    return (\n        <Container>\n            <Row>\n                <h1>{ props.ver? `Ver ${inputs.nombre}`: props.modificar?`Editar ${inputs.nombre}`: 'Nuevo animal'}</h1>\n            </Row>\n            <Form onSubmit={guardar}>\n                <Row>\n                    <Col xs={12}>\n                        <FormGroup>\n                            <Label for=\"tipo\">Tipo</Label>\n                            <Input type=\"select\" name=\"tipo\" value={inputs.tipo} onChange={actualizarFormulario} disabled={props.ver}>\n                                <option>Seleccione</option>\n                                { tipos && tipos.map((t, i) => <option key={i} value={t.codigo}>\n                                        {t.nombre}\n                                    </option> \n                                )}\n                            </Input>\n                        </FormGroup>\n                    </Col>\n                    <Col xs={12}>\n                        <FormGroup>\n                            <Label for=\"nombre\">Nombre</Label>\n                            <Input type=\"text\" name=\"nombre\" value={inputs.nombre} onChange={actualizarFormulario} disabled={props.ver}/>\n                        </FormGroup>\n                    </Col>\n                    <Col xs={12}>\n                        <FormGroup>\n                            <Label for=\"color\">Color</Label>\n                            <Input type=\"color\" name=\"color\" value={inputs.color} onChange={actualizarFormulario} disabled={props.ver}/>\n                        </FormGroup>\n                    </Col>\n                    <Col xs={12}>\n                        <FormGroup>\n                            <Label for=\"tamanio\">Tamaño</Label>\n                            <Input type=\"select\" name=\"tamanio\" value={inputs.tamanio} onChange={actualizarFormulario} disabled={props.ver}>\n                                <option>Seleccione</option>\n                                <option value=\"Pequeño\">Pequeño</option>\n                                <option value=\"Mediano\">Mediano</option>\n                                <option value=\"Grande\">Grande</option>\n                            </Input>\n                        </FormGroup>\n                    </Col>\n                    <Col xs={12}>\n                        <FormGroup>\n                            <Label for=\"tamanio\">Fecha</Label>\n                            <Input type=\"date\" name=\"fecha\" value={inputs.fecha} onChange={actualizarFormulario} disabled={props.ver}/>\n                        </FormGroup>\n                    </Col>\n                    <Col xs={12}>\n                        {props.crear && <Button type=\"submit\">Crear</Button>}\n                        {props.modificar && <Button type=\"submit\">Modificar</Button>}\n                        <Button type=\"button\" onClick={volver}>Cerrar</Button>\n                    </Col>\n                </Row>\n            </Form>\n        </Container>\n    );\n}\n\nexport default AnimalForm;","import React, {useState, useEffect} from 'react';\nimport AnimalList from \"./AnimalList\";\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nimport {Row} from 'reactstrap';\nimport AnimalForm from './AnimalForm';\nimport {BrowserRouter as Router, Route, Switch, useHistory, useRouteMatch} from 'react-router-dom';\n\nconst AnimalManager = props => {\n    let { path, url } = useRouteMatch();\n    \n    const [datos, setDatos] = useState([]);\n\n    useEffect(() =>{\n        axios.get('/api/animales')\n            .then(resp => setDatos(resp.data.data))\n            .catch(error => Swal.fire('Error al obtener los datos', 'Ha ocurrido un problema al intentar obtener el listado de animales', 'error'))\n    }, []);\n\n    return (\n        <Row>\n            <Router>\n                <Switch>\n                    <Route exact path={path}>\n                        <AnimalList datos={datos} setDatos={setDatos}/>\n                    </Route>\n                    <Route path={`${path}/crear`}>\n                        <AnimalForm crear={true} datos={datos} setDatos={setDatos}/>\n                    </Route>\n                    <Route path={`${path}/modificar/:id`}>\n                        <AnimalForm modificar={true} datos={datos} setDatos={setDatos}/>\n                    </Route>\n                    <Route path={`${path}/ver/:id`}>\n                        <AnimalForm  ver={true}/>\n                    </Route>\n                </Switch>\n            </Router>\n        </Row>\n    );\n}\n\nexport default AnimalManager;","import axios from 'axios';\nimport { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {Button, Col, Container, Form, FormGroup, Input, Label, Row} from 'reactstrap';\nimport Swal from 'sweetalert2';\n\nconst Login = () => {\n    const history = useHistory();\n    const [inputs, setInputs] = useState({email: '', password: ''});    \n\n    const actualizarFormulario = (e) => {\n        const {name, value} = e.target;\n        setInputs({\n            ...inputs, \n            [name]: value\n        });\n    }\n    \n    const login = (e) => {\n        e.preventDefault();\n        axios.post('/api/login', inputs)\n            .then(resp => {\n                if(resp.data && !resp.data.error) {\n                    history.push('/animales')\n                } else {\n                    Swal.fire('Error', resp.data.mensaje, 'error');\n                }\n            })\n    }\n    \n    return (\n        <Container>\n            <Row>\n                <h1>Login</h1>\n            </Row>\n            <Form onSubmit={login}>\n                <Row>\n                    <Col xs={12}>\n                        <FormGroup>\n                            <Label for=\"email\">Email</Label>\n                            <Input type=\"text\" name=\"email\" value={inputs.email} onChange={actualizarFormulario} required/>\n                        </FormGroup>\n                    </Col>\n                    <Col xs={12}>\n                        <FormGroup>\n                            <Label for=\"password\">Password</Label>\n                            <Input type=\"password\" name=\"password\" value={inputs.password} onChange={actualizarFormulario} required/>\n                        </FormGroup>\n                    </Col>\n                    <Col xs={12}>\n                        <Button type=\"submit\">Ingresar</Button>\n                    </Col>\n                </Row>\n            </Form>\n        </Container>\n    );\n}\n\nexport default Login;","import AnimalManager from './components/animales/AnimalManager';\nimport Login from './components/login/Login'\nimport {BrowserRouter as Router, Route, Switch, useHistory} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Router>\n          <Switch>\n            <Route exact path=\"/\">\n              <Login />\n            </Route>\n            <Route path=\"/animales\">\n              <AnimalManager />\n            </Route>\n          </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}